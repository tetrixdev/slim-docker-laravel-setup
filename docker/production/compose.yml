services:
  {{PROJECT_NAME}}-php:
    image: ghcr.io/{{GITHUB_REPOSITORY_OWNER}}/{{PROJECT_NAME}}-php:${IMAGE_TAG:-latest}
    container_name: {{PROJECT_NAME}}-php
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .env:/var/www/.env:ro
    networks:
      - {{PROJECT_NAME}}
    depends_on:
      {{PROJECT_NAME}}-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "php-fpm -t || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s

  {{PROJECT_NAME}}-nginx:
    image: ghcr.io/{{GITHUB_REPOSITORY_OWNER}}/{{PROJECT_NAME}}-nginx:${IMAGE_TAG:-latest}
    container_name: {{PROJECT_NAME}}-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
    networks:
      - {{PROJECT_NAME}}
    depends_on:
      {{PROJECT_NAME}}-php:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  {{PROJECT_NAME}}-postgres:
    image: postgres:17-alpine
    container_name: {{PROJECT_NAME}}-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: {{PROJECT_NAME}}
      POSTGRES_USER: {{PROJECT_NAME}}
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - {{PROJECT_NAME}}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{PROJECT_NAME}} -d {{PROJECT_NAME}}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  {{PROJECT_NAME}}:
    driver: bridge

volumes:
  postgres-data:
    driver: local